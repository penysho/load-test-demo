#################
## build stage ##
#################
FROM rust:1-slim-bullseye AS builder
WORKDIR /code

# install required build dependencies
RUN apt update && apt install -y libpq-dev

# copy Cargo.toml and Cargo.lock separately to optimize caching
RUN USER=root cargo init
COPY backend/Cargo.toml Cargo.toml
COPY backend/Cargo.lock Cargo.lock

# pre-fetch dependencies
RUN cargo fetch

# copy app files
COPY backend/src src

# compile app
RUN cargo build --release

###############
## run stage ##
###############
FROM debian:bullseye-slim
WORKDIR /app

# install runtime dependencies
RUN apt update && apt install -y --no-install-recommends libpq-dev && apt clean && rm -rf /var/lib/apt/lists/*

# copy server binary from build stage
COPY --from=builder /code/target/release/backend backend

# set user to non-root unless root is required for your app
USER 1001

# indicate what port the server is running on
EXPOSE 8011

# run server
CMD [ "/app/backend" ]

# avoid “exec format error” error in Amazon ECS
# https://repost.aws/ja/knowledge-center/ecs-task-exec-format-error
